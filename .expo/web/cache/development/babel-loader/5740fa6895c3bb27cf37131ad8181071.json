{"ast":null,"code":"import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./en.json\";\nimport hi from \"./hi.json\";\nimport ar from \"./ar.json\";\nimport id from \"./id.json\";\nimport chi from \"./chi.json\";\nimport it from \"./it.json\";\nimport * as RNLocalize from \"expo-localization\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nvar languageDetector = {\n  type: \"languageDetector\",\n  async: true,\n  detect: function detect(callback) {\n    return callback(RNLocalize.locale.split(\"-\")[0]);\n  },\n  init: function init() {},\n  cacheUserLanguage: function cacheUserLanguage() {}\n};\ni18next.use(languageDetector).use(initReactI18next).init({\n  compatibilityJSON: \"v3\",\n  fallbackLng: \"en\",\n  resources: {\n    en: en,\n    hi: hi,\n    ar: ar,\n    id: id,\n    chi: chi,\n    it: it\n  },\n  lng: I18nManager.isRTL ? \"ar\" : \"en\",\n  interpolation: {\n    escapeValue: false\n  },\n  react: {\n    useSuspense: false\n  },\n  keySeparator: false\n});\nexport default i18next;","map":{"version":3,"names":["i18next","initReactI18next","en","hi","ar","id","chi","it","RNLocalize","languageDetector","type","async","detect","callback","locale","split","init","cacheUserLanguage","use","compatibilityJSON","fallbackLng","resources","lng","I18nManager","isRTL","interpolation","escapeValue","react","useSuspense","keySeparator"],"sources":["/Users/nicolamelito/Desktop/Tu-Store/src/language/i18n.js"],"sourcesContent":["import i18next from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from \"./en.json\";\r\nimport hi from \"./hi.json\";\r\nimport ar from \"./ar.json\";\r\nimport id from \"./id.json\";\r\nimport chi from \"./chi.json\";\r\nimport it from \"./it.json\";\r\nimport * as RNLocalize from \"expo-localization\";\r\nimport { I18nManager } from \"react-native\";\r\n\r\nconst languageDetector = {\r\n  type: \"languageDetector\",\r\n  async: true,\r\n  detect: (callback) => {\r\n    return callback(RNLocalize.locale.split(\"-\")[0]);\r\n  },\r\n  init: () => {},\r\n  cacheUserLanguage: () => {},\r\n};\r\n\r\ni18next\r\n  .use(languageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    compatibilityJSON: \"v3\",\r\n    fallbackLng: \"en\",\r\n    resources: {\r\n      en: en,\r\n      hi: hi,\r\n      ar: ar,\r\n      id: id,\r\n      chi: chi,\r\n      it: it,\r\n    },\r\n    lng: I18nManager.isRTL ? \"ar\" : \"en\",\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n    keySeparator: false,\r\n  });\r\nexport default i18next;\r\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,EAAP;AACA,OAAOC,EAAP;AACA,OAAOC,EAAP;AACA,OAAOC,EAAP;AACA,OAAOC,GAAP;AACA,OAAOC,EAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,mBAA5B;;AAGA,IAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,kBADiB;EAEvBC,KAAK,EAAE,IAFgB;EAGvBC,MAAM,EAAE,gBAACC,QAAD,EAAc;IACpB,OAAOA,QAAQ,CAACL,UAAU,CAACM,MAAX,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAD,CAAf;EACD,CALsB;EAMvBC,IAAI,EAAE,gBAAM,CAAE,CANS;EAOvBC,iBAAiB,EAAE,6BAAM,CAAE;AAPJ,CAAzB;AAUAjB,OAAO,CACJkB,GADH,CACOT,gBADP,EAEGS,GAFH,CAEOjB,gBAFP,EAGGe,IAHH,CAGQ;EACJG,iBAAiB,EAAE,IADf;EAEJC,WAAW,EAAE,IAFT;EAGJC,SAAS,EAAE;IACTnB,EAAE,EAAEA,EADK;IAETC,EAAE,EAAEA,EAFK;IAGTC,EAAE,EAAEA,EAHK;IAITC,EAAE,EAAEA,EAJK;IAKTC,GAAG,EAAEA,GALI;IAMTC,EAAE,EAAEA;EANK,CAHP;EAWJe,GAAG,EAAEC,WAAW,CAACC,KAAZ,GAAoB,IAApB,GAA2B,IAX5B;EAYJC,aAAa,EAAE;IACbC,WAAW,EAAE;EADA,CAZX;EAeJC,KAAK,EAAE;IACLC,WAAW,EAAE;EADR,CAfH;EAkBJC,YAAY,EAAE;AAlBV,CAHR;AAuBA,eAAe7B,OAAf"},"metadata":{},"sourceType":"module"}