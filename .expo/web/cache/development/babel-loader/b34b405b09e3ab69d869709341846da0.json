{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useMemo } from 'react';\nimport { deepSearchInArr } from \"../helpers/deepSearchInArr\";\nimport { findIndexInArr } from \"../helpers/findIndexInArr\";\nimport { isExist } from \"../helpers/isExist\";\nexport var useSelectDropdown = function useSelectDropdown(data, defaultValueByIndex, defaultValue, disabledInternalSearch) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedItem = _useState2[0],\n    setSelectedItem = _useState2[1];\n  var _useState3 = useState(-1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedIndex = _useState4[0],\n    setSelectedIndex = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchTxt = _useState6[0],\n    setSearchTxt = _useState6[1];\n\n  useEffect(function () {\n    if (!data || data.length == 0) {\n      reset();\n    }\n  }, [data]);\n\n  useEffect(function () {\n    if (isExist(defaultValueByIndex)) {\n      if (data && isExist(data[defaultValueByIndex])) {\n        selectItem(defaultValueByIndex);\n      }\n    }\n  }, [defaultValueByIndex]);\n  useEffect(function () {\n    if (isExist(defaultValue)) {\n      if (data && findIndexInArr(defaultValue, data) >= 0) {\n        selectItem(findIndexInArr(defaultValue, data));\n      }\n    }\n  }, [defaultValue]);\n  var dataArr = useMemo(function () {\n    if (disabledInternalSearch) {\n      return data;\n    }\n    return searchTxt ? deepSearchInArr(searchTxt, data) : data;\n  }, [data, searchTxt]);\n  var selectItem = function selectItem(index) {\n    setSelectedItem(data[index]);\n    setSelectedIndex(index);\n  };\n  var reset = function reset() {\n    setSelectedItem(null);\n    setSelectedIndex(-1);\n  };\n  return {\n    dataArr: dataArr,\n    selectedItem: selectedItem,\n    selectedIndex: selectedIndex,\n    selectItem: selectItem,\n    reset: reset,\n    searchTxt: searchTxt,\n    setSearchTxt: setSearchTxt\n  };\n};","map":{"version":3,"names":["useState","useEffect","useMemo","deepSearchInArr","findIndexInArr","isExist","useSelectDropdown","data","defaultValueByIndex","defaultValue","disabledInternalSearch","selectedItem","setSelectedItem","selectedIndex","setSelectedIndex","searchTxt","setSearchTxt","length","reset","selectItem","dataArr","index"],"sources":["/Users/p.marasca/Desktop/Tu-Store/node_modules/react-native-select-dropdown/src/hooks/useSelectDropdown.js"],"sourcesContent":["import {useState, useEffect, useMemo} from 'react';\nimport {deepSearchInArr} from '../helpers/deepSearchInArr';\nimport {findIndexInArr} from '../helpers/findIndexInArr';\nimport {isExist} from '../helpers/isExist';\n\nexport const useSelectDropdown = (data, defaultValueByIndex, defaultValue, disabledInternalSearch) => {\n  const [selectedItem, setSelectedItem] = useState(null); // selected item from dropdown\n  const [selectedIndex, setSelectedIndex] = useState(-1); // index of selected item from dropdown\n  const [searchTxt, setSearchTxt] = useState('');\n\n  // data array changes\n  useEffect(() => {\n    if (!data || data.length == 0) {\n      reset();\n    }\n  }, [data]);\n\n  // default value by index added or changed\n  useEffect(() => {\n    // defaultValueByIndex may be equals zero\n    if (isExist(defaultValueByIndex)) {\n      if (data && isExist(data[defaultValueByIndex])) {\n        selectItem(defaultValueByIndex);\n      }\n    }\n  }, [defaultValueByIndex]);\n  // default value added or changed\n  useEffect(() => {\n    // defaultValue may be equals zero\n    if (isExist(defaultValue)) {\n      if (data && findIndexInArr(defaultValue, data) >= 0) {\n        selectItem(findIndexInArr(defaultValue, data));\n      }\n    }\n  }, [defaultValue]);\n\n  const dataArr = useMemo(() => {\n    if (disabledInternalSearch) {\n      return data;\n    }\n    return searchTxt ? deepSearchInArr(searchTxt, data) : data;\n  }, [data, searchTxt]);\n\n  const selectItem = index => {\n    setSelectedItem(data[index]);\n    setSelectedIndex(index);\n  };\n\n  const reset = () => {\n    setSelectedItem(null);\n    setSelectedIndex(-1);\n  };\n\n  return {\n    dataArr,\n    selectedItem,\n    selectedIndex,\n    selectItem,\n    reset,\n    searchTxt,\n    setSearchTxt,\n  };\n};\n"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAO,OAAO;AAClD,SAAQC,eAAe;AACvB,SAAQC,cAAc;AACtB,SAAQC,OAAO;AAEf,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,IAAI,EAAEC,mBAAmB,EAAEC,YAAY,EAAEC,sBAAsB,EAAK;EACpG,gBAAwCV,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/CW,YAAY;IAAEC,eAAe;EACpC,iBAA0CZ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAA/Ca,aAAa;IAAEC,gBAAgB;EACtC,iBAAkCd,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCe,SAAS;IAAEC,YAAY;;EAG9Bf,SAAS,CAAC,YAAM;IACd,IAAI,CAACM,IAAI,IAAIA,IAAI,CAACU,MAAM,IAAI,CAAC,EAAE;MAC7BC,KAAK,EAAE;IACT;EACF,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;;EAGVN,SAAS,CAAC,YAAM;IAEd,IAAII,OAAO,CAACG,mBAAmB,CAAC,EAAE;MAChC,IAAID,IAAI,IAAIF,OAAO,CAACE,IAAI,CAACC,mBAAmB,CAAC,CAAC,EAAE;QAC9CW,UAAU,CAACX,mBAAmB,CAAC;MACjC;IACF;EACF,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzBP,SAAS,CAAC,YAAM;IAEd,IAAII,OAAO,CAACI,YAAY,CAAC,EAAE;MACzB,IAAIF,IAAI,IAAIH,cAAc,CAACK,YAAY,EAAEF,IAAI,CAAC,IAAI,CAAC,EAAE;QACnDY,UAAU,CAACf,cAAc,CAACK,YAAY,EAAEF,IAAI,CAAC,CAAC;MAChD;IACF;EACF,CAAC,EAAE,CAACE,YAAY,CAAC,CAAC;EAElB,IAAMW,OAAO,GAAGlB,OAAO,CAAC,YAAM;IAC5B,IAAIQ,sBAAsB,EAAE;MAC1B,OAAOH,IAAI;IACb;IACA,OAAOQ,SAAS,GAAGZ,eAAe,CAACY,SAAS,EAAER,IAAI,CAAC,GAAGA,IAAI;EAC5D,CAAC,EAAE,CAACA,IAAI,EAAEQ,SAAS,CAAC,CAAC;EAErB,IAAMI,UAAU,GAAG,SAAbA,UAAU,CAAGE,KAAK,EAAI;IAC1BT,eAAe,CAACL,IAAI,CAACc,KAAK,CAAC,CAAC;IAC5BP,gBAAgB,CAACO,KAAK,CAAC;EACzB,CAAC;EAED,IAAMH,KAAK,GAAG,SAARA,KAAK,GAAS;IAClBN,eAAe,CAAC,IAAI,CAAC;IACrBE,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,OAAO;IACLM,OAAO,EAAPA,OAAO;IACPT,YAAY,EAAZA,YAAY;IACZE,aAAa,EAAbA,aAAa;IACbM,UAAU,EAAVA,UAAU;IACVD,KAAK,EAALA,KAAK;IACLH,SAAS,EAATA,SAAS;IACTC,YAAY,EAAZA;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}