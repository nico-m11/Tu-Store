{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Fonts } from \"../../themes/fonts\";\nimport { Colors } from \"../../themes/colors\";\nimport { Input } from \"react-native-elements\";\nimport ConstantStyle from \"../../themes/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport MainButton from \"./MainButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar ResetPassword = function ResetPassword(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var _useState = useState({\n    password: \"\",\n    showPassword: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var handleClick = function handleClick(fieldName) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      showPassword: fieldName === values.showPassword ? \"\" : fieldName\n    }));\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: {\n        marginTop: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(Text, {\n        style: _objectSpread({}, Fonts.Black24Bold),\n        children: t(\"reset_password\")\n      }), _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, Fonts.Black14Medium), {}, {\n          textAlign: \"center\",\n          marginHorizontal: 15,\n          marginTop: 20\n        }),\n        children: t(\"set_password\")\n      }), _jsxs(View, {\n        style: {\n          marginTop: 25\n        },\n        children: [_jsx(Text, {\n          style: _objectSpread(_objectSpread({}, Fonts.Grey14Bold), {}, {\n            marginHorizontal: 15\n          }),\n          children: t(\"password_label\")\n        }), _jsx(Input, {\n          placeholder: t(\"password_label\"),\n          containerStyle: {\n            marginTop: 8,\n            marginBottom: -10,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textAlign: \"center\"\n          },\n          inputContainerStyle: _objectSpread(_objectSpread({\n            borderBottomWidth: 0\n          }, ConstantStyle.shadow), {}, {\n            backgroundColor: Colors.white,\n            borderRadius: 10,\n            paddingHorizontal: 15,\n            width: width - 40,\n            height: 45\n          }),\n          inputStyle: _objectSpread({}, Fonts.Black14Medium),\n          rightIcon: _jsx(Ionicons, {\n            name: values.showPassword === \"Password\" ? \"eye\" : \"eye-off\",\n            style: {\n              marginLeft: 15\n            },\n            color: Colors.grey,\n            size: 20,\n            onPress: function onPress() {\n              return handleClick(\"Password\");\n            }\n          }),\n          secureTextEntry: values.showPassword === \"Password\" ? false : true\n        }), _jsx(Text, {\n          style: _objectSpread(_objectSpread({}, Fonts.Grey14Bold), {}, {\n            marginHorizontal: 15\n          }),\n          children: t(\"confirm_password\")\n        }), _jsx(Input, {\n          placeholder: t(\"confirm_password\"),\n          containerStyle: {\n            marginTop: 8,\n            marginBottom: -10,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textAlign: \"center\"\n          },\n          inputContainerStyle: _objectSpread(_objectSpread({\n            borderBottomWidth: 0\n          }, ConstantStyle.shadow), {}, {\n            backgroundColor: Colors.white,\n            borderRadius: 10,\n            paddingHorizontal: 15,\n            width: width - 40,\n            height: 45\n          }),\n          inputStyle: _objectSpread({}, Fonts.Black14Medium),\n          rightIcon: _jsx(Ionicons, {\n            name: values.showPassword === \"currentPassword\" ? \"eye\" : \"eye-off\",\n            style: {\n              marginLeft: 15\n            },\n            color: Colors.grey,\n            size: 20,\n            onPress: function onPress() {\n              return handleClick(\"currentPassword\");\n            }\n          }),\n          secureTextEntry: values.showPassword === \"currentPassword\" ? false : true\n        })]\n      })]\n    }), _jsx(View, {\n      style: {\n        margin: 20\n      },\n      children: _jsx(MainButton, {\n        name: t(\"reset_password\"),\n        onPress: props.onPress\n      })\n    })]\n  });\n};\n\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","Ionicons","Fonts","Colors","Input","ConstantStyle","useTranslation","MainButton","ResetPassword","props","t","i18n","Dimensions","get","height","width","password","showPassword","values","setValues","handleClick","fieldName","marginTop","alignItems","justifyContent","Black24Bold","Black14Medium","textAlign","marginHorizontal","Grey14Bold","marginBottom","borderBottomWidth","shadow","backgroundColor","white","borderRadius","paddingHorizontal","marginLeft","grey","margin","onPress"],"sources":["/Users/nicolamelito/Desktop/Tu-Store/src/screens/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  I18nManager,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Fonts } from \"../../themes/fonts\";\r\nimport { Colors } from \"../../themes/colors\";\r\nimport { Input } from \"react-native-elements\";\r\nimport ConstantStyle from \"../../themes/styles\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport MainButton from \"./MainButton\";\r\nconst ResetPassword = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const { height, width } = Dimensions.get(\"window\");\r\n  // show and hide multiple input box\r\n  const [values, setValues] = useState({\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n  const handleClick = (fieldName) => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: fieldName === values.showPassword ? \"\" : fieldName,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          marginTop: 20,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Text style={{ ...Fonts.Black24Bold }}>{t(\"reset_password\")}</Text>\r\n        <Text\r\n          style={{\r\n            ...Fonts.Black14Medium,\r\n            textAlign: \"center\",\r\n            marginHorizontal: 15,\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          {t(\"set_password\")}\r\n        </Text>\r\n        <View style={{ marginTop: 25 }}>\r\n          <Text style={{ ...Fonts.Grey14Bold, marginHorizontal: 15 }}>\r\n            {t(\"password_label\")}\r\n          </Text>\r\n          <Input\r\n            placeholder={t(\"password_label\")}\r\n            containerStyle={{\r\n              marginTop: 8,\r\n              marginBottom: -10,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              textAlign: \"center\",\r\n            }}\r\n            inputContainerStyle={{\r\n              borderBottomWidth: 0,\r\n              ...ConstantStyle.shadow,\r\n              backgroundColor: Colors.white,\r\n              borderRadius: 10,\r\n              paddingHorizontal: 15,\r\n              width: width - 40,\r\n              height: 45,\r\n            }}\r\n            inputStyle={{ ...Fonts.Black14Medium }}\r\n            rightIcon={\r\n              <Ionicons\r\n                name={values.showPassword === \"Password\" ? \"eye\" : \"eye-off\"}\r\n                style={{ marginLeft: 15 }}\r\n                color={Colors.grey}\r\n                size={20}\r\n                onPress={() => handleClick(\"Password\")}\r\n              />\r\n            }\r\n            secureTextEntry={values.showPassword === \"Password\" ? false : true}\r\n          />\r\n          <Text style={{ ...Fonts.Grey14Bold, marginHorizontal: 15 }}>\r\n            {t(\"confirm_password\")}\r\n          </Text>\r\n          <Input\r\n            placeholder={t(\"confirm_password\")}\r\n            containerStyle={{\r\n              marginTop: 8,\r\n              marginBottom: -10,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              textAlign: \"center\",\r\n            }}\r\n            inputContainerStyle={{\r\n              borderBottomWidth: 0,\r\n              ...ConstantStyle.shadow,\r\n              backgroundColor: Colors.white,\r\n              borderRadius: 10,\r\n              paddingHorizontal: 15,\r\n              width: width - 40,\r\n              height: 45,\r\n            }}\r\n            inputStyle={{ ...Fonts.Black14Medium }}\r\n            rightIcon={\r\n              <Ionicons\r\n                name={\r\n                  values.showPassword === \"currentPassword\" ? \"eye\" : \"eye-off\"\r\n                }\r\n                style={{ marginLeft: 15 }}\r\n                color={Colors.grey}\r\n                size={20}\r\n                onPress={() => handleClick(\"currentPassword\")}\r\n              />\r\n            }\r\n            secureTextEntry={\r\n              values.showPassword === \"currentPassword\" ? false : true\r\n            }\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={{ margin: 20 }}>\r\n        <MainButton name={t(\"reset_password\")} onPress={props.onPress} />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}