{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"./ignoreWarnings\";\nimport \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider } from \"native-base\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { Navigation } from \"./src/navigation\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport authReducer from \"./src/store/reducer/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar rootReducer = combineReducers({\n  auth: authReducer\n});\nvar store = createStore(rootReducer);\nvar fetchFonts = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync({\n            \"Mulish-Regular\": require(\"./assets/font/Mulish-Regular.ttf\"),\n            \"Mulish-Bold\": require(\"./assets/font/Mulish-Bold.ttf\"),\n            \"Mulish-Medium\": require(\"./assets/font/Mulish-Medium.ttf\")\n          }));\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontLoaded = _useState2[0],\n    setFontLoaded = _useState2[1];\n  if (!fontLoaded) {\n    return _jsx(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoaded(true);\n      },\n      onError: function onError() {\n        console.log(\"Font not loaded\");\n      }\n    });\n  }\n  var config = {\n    dependencies: {\n      \"linear-gradient\": require(\"expo-linear-gradient\").LinearGradient\n    }\n  };\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(NativeBaseProvider, {\n      config: config,\n      children: _jsx(Navigation, {})\n    })\n  });\n}","map":{"version":3,"names":["React","useState","NativeBaseProvider","AppLoading","Font","Navigation","createStore","combineReducers","Provider","authReducer","rootReducer","auth","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded","console","log","config","dependencies","LinearGradient"],"sources":["/Users/p.marasca/Desktop/Tu-Store/App.js"],"sourcesContent":["import \"./ignoreWarnings\";\nimport \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider } from \"native-base\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { Navigation } from \"./src/navigation\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport authReducer from \"./src/store/reducer/auth\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst store = createStore(rootReducer);\n\nconst fetchFonts = async () => {\n  return await Font.loadAsync({\n    \"Mulish-Regular\": require(\"./assets/font/Mulish-Regular.ttf\"),\n    \"Mulish-Bold\": require(\"./assets/font/Mulish-Bold.ttf\"),\n    \"Mulish-Medium\": require(\"./assets/font/Mulish-Medium.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [fontLoaded, setFontLoaded] = useState(false);\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => {\n          setFontLoaded(true);\n        }}\n        onError={() => {\n          console.log(\"Font not loaded\");\n        }}\n      />\n    );\n  }\n  const config = {\n    dependencies: {\n      \"linear-gradient\": require(\"expo-linear-gradient\").LinearGradient,\n    },\n  };\n\n  return (\n    <Provider store={store}>\n      <NativeBaseProvider config={config}>\n        <Navigation />\n      </NativeBaseProvider>\n    </Provider>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAO,8BAA8B;AACrC,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,aAAa;AAChD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,SAASC,UAAU;AACnB,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,WAAW;AAAiC;AAEnD,IAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCI,IAAI,EAAEF;AACR,CAAC,CAAC;AAEF,IAAMG,KAAK,GAAGN,WAAW,CAACI,WAAW,CAAC;AAEtC,IAAMG,UAAU,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACJT,IAAI,CAACU,SAAS,CAAC;YAC1B,gBAAgB,EAAEC,OAAO,oCAAoC;YAC7D,aAAa,EAAEA,OAAO,iCAAiC;YACvD,eAAe,EAAEA,OAAO;UAC1B,CAAC,CAAC;QAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CACH;AAED,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAoCf,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CgB,UAAU;IAAEC,aAAa;EAChC,IAAI,CAACD,UAAU,EAAE;IACf,OACE,KAAC,UAAU;MACT,UAAU,EAAEJ,UAAW;MACvB,QAAQ,EAAE,oBAAM;QACdK,aAAa,CAAC,IAAI,CAAC;MACrB,CAAE;MACF,OAAO,EAAE,mBAAM;QACbC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAChC;IAAE,EACF;EAEN;EACA,IAAMC,MAAM,GAAG;IACbC,YAAY,EAAE;MACZ,iBAAiB,EAAEP,OAAO,CAAC,sBAAsB,CAAC,CAACQ;IACrD;EACF,CAAC;EAED,OACE,KAAC,QAAQ;IAAC,KAAK,EAAEX,KAAM;IAAA,UACrB,KAAC,kBAAkB;MAAC,MAAM,EAAES,MAAO;MAAA,UACjC,KAAC,UAAU;IAAG;EACK,EACZ;AAEf"},"metadata":{},"sourceType":"module"}