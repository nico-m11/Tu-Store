{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"./ignoreWarnings\";\nimport \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider } from \"native-base\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { Navigation } from \"./src/navigation\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport authReducer from \"./src/store/reducer/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar rootReducer = combineReducers({\n  auth: authReducer\n});\nvar store = createStore(rootReducer);\n\nvar fetchFonts = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync({\n            \"Mulish-Regular\": require(\"./assets/font/Mulish-Regular.ttf\"),\n            \"Mulish-Bold\": require(\"./assets/font/Mulish-Bold.ttf\"),\n            \"Mulish-Medium\": require(\"./assets/font/Mulish-Medium.ttf\")\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return _jsx(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoaded(true);\n      },\n      onError: function onError() {\n        console.log(\"Font not loaded\");\n      }\n    });\n  }\n\n  var config = {\n    dependencies: {\n      \"linear-gradient\": require(\"expo-linear-gradient\").LinearGradient\n    }\n  };\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(NativeBaseProvider, {\n      config: config,\n      children: _jsx(Navigation, {})\n    })\n  });\n}","map":{"version":3,"names":["React","useState","NativeBaseProvider","AppLoading","Font","Navigation","createStore","combineReducers","Provider","authReducer","rootReducer","auth","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded","console","log","config","dependencies","LinearGradient"],"sources":["/Users/nicolamelito/Desktop/Tu-Store/App.js"],"sourcesContent":["import \"./ignoreWarnings\";\nimport \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider } from \"native-base\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { Navigation } from \"./src/navigation\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport authReducer from \"./src/store/reducer/auth\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst store = createStore(rootReducer);\n\nconst fetchFonts = async () => {\n  return await Font.loadAsync({\n    \"Mulish-Regular\": require(\"./assets/font/Mulish-Regular.ttf\"),\n    \"Mulish-Bold\": require(\"./assets/font/Mulish-Bold.ttf\"),\n    \"Mulish-Medium\": require(\"./assets/font/Mulish-Medium.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [fontLoaded, setFontLoaded] = useState(false);\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => {\n          setFontLoaded(true);\n        }}\n        onError={() => {\n          console.log(\"Font not loaded\");\n        }}\n      />\n    );\n  }\n  const config = {\n    dependencies: {\n      \"linear-gradient\": require(\"expo-linear-gradient\").LinearGradient,\n    },\n  };\n\n  return (\n    <Provider store={store}>\n      <NativeBaseProvider config={config}>\n        <Navigation />\n      </NativeBaseProvider>\n    </Provider>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP;;AAEA,IAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCI,IAAI,EAAEF;AAD4B,CAAD,CAAnC;AAIA,IAAMG,KAAK,GAAGN,WAAW,CAACI,WAAD,CAAzB;;AAEA,IAAMG,UAAU,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACJT,IAAI,CAACU,SAAL,CAAe;YAC1B,kBAAkBC,OAAO,oCADC;YAE1B,eAAeA,OAAO,iCAFI;YAG1B,iBAAiBA,OAAO;UAHE,CAAf,CADI;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAnB;;AAQA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAoCf,QAAQ,CAAC,KAAD,CAA5C;EAAA;EAAA,IAAOgB,UAAP;EAAA,IAAmBC,aAAnB;;EACA,IAAI,CAACD,UAAL,EAAiB;IACf,OACE,KAAC,UAAD;MACE,UAAU,EAAEJ,UADd;MAEE,QAAQ,EAAE,oBAAM;QACdK,aAAa,CAAC,IAAD,CAAb;MACD,CAJH;MAKE,OAAO,EAAE,mBAAM;QACbC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACD;IAPH,EADF;EAWD;;EACD,IAAMC,MAAM,GAAG;IACbC,YAAY,EAAE;MACZ,mBAAmBP,OAAO,CAAC,sBAAD,CAAP,CAAgCQ;IADvC;EADD,CAAf;EAMA,OACE,KAAC,QAAD;IAAU,KAAK,EAAEX,KAAjB;IAAA,UACE,KAAC,kBAAD;MAAoB,MAAM,EAAES,MAA5B;MAAA,UACE,KAAC,UAAD;IADF;EADF,EADF;AAOD"},"metadata":{},"sourceType":"module"}