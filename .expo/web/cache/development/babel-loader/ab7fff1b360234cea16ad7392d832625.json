{"ast":null,"code":"\nimport { ANDROID_DISPLAY, ANDROID_MODE, MIN_MS } from \"./constants\";\nimport pickers from \"./picker\";\nimport { sharedPropsValidation } from \"./utils\";\nimport invariant from 'invariant';\nexport function getOpenPicker(_ref) {\n  var mode = _ref.mode,\n    value = _ref.value,\n    display = _ref.display,\n    is24Hour = _ref.is24Hour,\n    minimumDate = _ref.minimumDate,\n    maximumDate = _ref.maximumDate,\n    neutralButtonLabel = _ref.neutralButtonLabel,\n    minuteInterval = _ref.minuteInterval,\n    timeZoneOffsetInMinutes = _ref.timeZoneOffsetInMinutes;\n  switch (mode) {\n    case ANDROID_MODE.time:\n      return function () {\n        return (\n          pickers[mode].open({\n            value: value,\n            display: display,\n            minuteInterval: minuteInterval,\n            is24Hour: is24Hour,\n            neutralButtonLabel: neutralButtonLabel,\n            timeZoneOffsetInMinutes: timeZoneOffsetInMinutes\n          })\n        );\n      };\n    default:\n      return function () {\n        return (\n          pickers[ANDROID_MODE.date].open({\n            value: value,\n            display: display,\n            minimumDate: minimumDate,\n            maximumDate: maximumDate,\n            neutralButtonLabel: neutralButtonLabel,\n            timeZoneOffsetInMinutes: timeZoneOffsetInMinutes\n          })\n        );\n      };\n  }\n}\nexport function timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes) {\n  if (typeof timeZoneOffsetInMinutes === 'number') {\n    var offset = date.getTimezoneOffset() + timeZoneOffsetInMinutes;\n    var shiftedDate = new Date(date.getTime() - offset * MIN_MS);\n    return shiftedDate;\n  }\n  return date;\n}\nexport function validateAndroidProps(props) {\n  sharedPropsValidation({\n    value: props == null ? void 0 : props.value\n  });\n  var mode = props.mode,\n    display = props.display;\n  invariant(!(display === ANDROID_DISPLAY.calendar && mode === ANDROID_MODE.time) && !(display === ANDROID_DISPLAY.clock && mode === ANDROID_MODE.date), \"display: \" + display + \" and mode: \" + mode + \" cannot be used together.\");\n}","map":{"version":3,"names":["ANDROID_DISPLAY","ANDROID_MODE","MIN_MS","pickers","sharedPropsValidation","invariant","getOpenPicker","mode","value","display","is24Hour","minimumDate","maximumDate","neutralButtonLabel","minuteInterval","timeZoneOffsetInMinutes","time","open","date","timeZoneOffsetDateSetter","offset","getTimezoneOffset","shiftedDate","Date","getTime","validateAndroidProps","props","calendar","clock"],"sources":["/Users/p.marasca/Desktop/Tu-Store/node_modules/@react-native-community/datetimepicker/src/androidUtils.js"],"sourcesContent":["/**\n * @format\n * @flow strict-local\n */\nimport {ANDROID_DISPLAY, ANDROID_MODE, MIN_MS} from './constants';\nimport pickers from './picker';\nimport type {AndroidNativeProps, DateTimePickerResult} from './types';\nimport {sharedPropsValidation} from './utils';\nimport invariant from 'invariant';\ntype PresentPickerCallback = () => Promise<DateTimePickerResult>;\n\ntype Timestamp = number;\n\ntype Params = {\n  value: Timestamp,\n  mode: AndroidNativeProps['mode'],\n  display: AndroidNativeProps['display'],\n  is24Hour: AndroidNativeProps['is24Hour'],\n  minimumDate: AndroidNativeProps['minimumDate'],\n  maximumDate: AndroidNativeProps['maximumDate'],\n  neutralButtonLabel: AndroidNativeProps['neutralButtonLabel'],\n  minuteInterval: AndroidNativeProps['minuteInterval'],\n  timeZoneOffsetInMinutes: AndroidNativeProps['timeZoneOffsetInMinutes'],\n};\nexport function getOpenPicker({\n  mode,\n  value,\n  display,\n  is24Hour,\n  minimumDate,\n  maximumDate,\n  neutralButtonLabel,\n  minuteInterval,\n  timeZoneOffsetInMinutes,\n}: Params): PresentPickerCallback {\n  switch (mode) {\n    case ANDROID_MODE.time:\n      return () =>\n        // $FlowFixMe - `AbstractComponent` [1] is not an instance type.\n        pickers[mode].open({\n          value,\n          display,\n          minuteInterval,\n          is24Hour,\n          neutralButtonLabel,\n          timeZoneOffsetInMinutes,\n        });\n    default:\n      return () =>\n        // $FlowFixMe - `AbstractComponent` [1] is not an instance type.\n        pickers[ANDROID_MODE.date].open({\n          value,\n          display,\n          minimumDate,\n          maximumDate,\n          neutralButtonLabel,\n          timeZoneOffsetInMinutes,\n        });\n  }\n}\n\nexport function timeZoneOffsetDateSetter(\n  date: Date,\n  timeZoneOffsetInMinutes: ?number,\n): Date {\n  if (typeof timeZoneOffsetInMinutes === 'number') {\n    // FIXME this causes a bug. repro: set tz offset to zero, and then keep opening and closing the calendar picker\n    // https://github.com/react-native-datetimepicker/datetimepicker/issues/528\n    const offset = date.getTimezoneOffset() + timeZoneOffsetInMinutes;\n    const shiftedDate = new Date(date.getTime() - offset * MIN_MS);\n    return shiftedDate;\n  }\n  return date;\n}\n\nexport function validateAndroidProps(props: AndroidNativeProps) {\n  sharedPropsValidation({value: props?.value});\n  const {mode, display} = props;\n  invariant(\n    !(display === ANDROID_DISPLAY.calendar && mode === ANDROID_MODE.time) &&\n      !(display === ANDROID_DISPLAY.clock && mode === ANDROID_MODE.date),\n    `display: ${display} and mode: ${mode} cannot be used together.`,\n  );\n}\n"],"mappings":";AAIA,SAAQA,eAAe,EAAEC,YAAY,EAAEC,MAAM;AAC7C,OAAOC,OAAO;AAEd,SAAQC,qBAAqB;AAC7B,OAAOC,SAAS,MAAM,WAAW;AAgBjC,OAAO,SAASC,aAAa,OAUK;EAAA,IAThCC,IAAI,QAAJA,IAAI;IACJC,KAAK,QAALA,KAAK;IACLC,OAAO,QAAPA,OAAO;IACPC,QAAQ,QAARA,QAAQ;IACRC,WAAW,QAAXA,WAAW;IACXC,WAAW,QAAXA,WAAW;IACXC,kBAAkB,QAAlBA,kBAAkB;IAClBC,cAAc,QAAdA,cAAc;IACdC,uBAAuB,QAAvBA,uBAAuB;EAEvB,QAAQR,IAAI;IACV,KAAKN,YAAY,CAACe,IAAI;MACpB,OAAO;QAAA;UAELb,OAAO,CAACI,IAAI,CAAC,CAACU,IAAI,CAAC;YACjBT,KAAK,EAALA,KAAK;YACLC,OAAO,EAAPA,OAAO;YACPK,cAAc,EAAdA,cAAc;YACdJ,QAAQ,EAARA,QAAQ;YACRG,kBAAkB,EAAlBA,kBAAkB;YAClBE,uBAAuB,EAAvBA;UACF,CAAC;QAAC;MAAA;IACN;MACE,OAAO;QAAA;UAELZ,OAAO,CAACF,YAAY,CAACiB,IAAI,CAAC,CAACD,IAAI,CAAC;YAC9BT,KAAK,EAALA,KAAK;YACLC,OAAO,EAAPA,OAAO;YACPE,WAAW,EAAXA,WAAW;YACXC,WAAW,EAAXA,WAAW;YACXC,kBAAkB,EAAlBA,kBAAkB;YAClBE,uBAAuB,EAAvBA;UACF,CAAC;QAAC;MAAA;EAAC;AAEX;AAEA,OAAO,SAASI,wBAAwB,CACtCD,IAAU,EACVH,uBAAgC,EAC1B;EACN,IAAI,OAAOA,uBAAuB,KAAK,QAAQ,EAAE;IAG/C,IAAMK,MAAM,GAAGF,IAAI,CAACG,iBAAiB,EAAE,GAAGN,uBAAuB;IACjE,IAAMO,WAAW,GAAG,IAAIC,IAAI,CAACL,IAAI,CAACM,OAAO,EAAE,GAAGJ,MAAM,GAAGlB,MAAM,CAAC;IAC9D,OAAOoB,WAAW;EACpB;EACA,OAAOJ,IAAI;AACb;AAEA,OAAO,SAASO,oBAAoB,CAACC,KAAyB,EAAE;EAC9DtB,qBAAqB,CAAC;IAACI,KAAK,EAAEkB,KAAK,oBAALA,KAAK,CAAElB;EAAK,CAAC,CAAC;EAC5C,IAAOD,IAAI,GAAamB,KAAK,CAAtBnB,IAAI;IAAEE,OAAO,GAAIiB,KAAK,CAAhBjB,OAAO;EACpBJ,SAAS,CACP,EAAEI,OAAO,KAAKT,eAAe,CAAC2B,QAAQ,IAAIpB,IAAI,KAAKN,YAAY,CAACe,IAAI,CAAC,IACnE,EAAEP,OAAO,KAAKT,eAAe,CAAC4B,KAAK,IAAIrB,IAAI,KAAKN,YAAY,CAACiB,IAAI,CAAC,gBACxDT,OAAO,mBAAcF,IAAI,+BACtC;AACH"},"metadata":{},"sourceType":"module"}