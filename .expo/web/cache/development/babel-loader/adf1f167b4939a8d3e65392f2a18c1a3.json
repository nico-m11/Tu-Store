{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { ViewPropTypes as RNViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ViewPropTypes = RNViewPropTypes || View.propTypes;\nvar CheckBox = function (_Component) {\n  _inherits(CheckBox, _Component);\n  var _super = _createSuper(CheckBox);\n  function CheckBox(props) {\n    _classCallCheck(this, CheckBox);\n    return _super.call(this, props);\n  }\n  _createClass(CheckBox, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.props.onClick();\n    }\n  }, {\n    key: \"_renderLeft\",\n    value: function _renderLeft() {\n      if (this.props.leftTextView) return this.props.leftTextView;\n      if (!this.props.leftText) return null;\n      return _jsx(Text, {\n        style: [styles.leftText, this.props.leftTextStyle],\n        children: this.props.leftText\n      });\n    }\n  }, {\n    key: \"_renderRight\",\n    value: function _renderRight() {\n      if (this.props.rightTextView) return this.props.rightTextView;\n      if (!this.props.rightText) return null;\n      return _jsx(Text, {\n        style: [styles.rightText, this.props.rightTextStyle],\n        children: this.props.rightText\n      });\n    }\n  }, {\n    key: \"_renderImage\",\n    value: function _renderImage() {\n      if (this.props.isIndeterminate) {\n        return this.props.indeterminateImage ? this.props.indeterminateImage : this.genCheckedImage();\n      }\n      if (this.props.isChecked) {\n        return this.props.checkedImage ? this.props.checkedImage : this.genCheckedImage();\n      } else {\n        return this.props.unCheckedImage ? this.props.unCheckedImage : this.genCheckedImage();\n      }\n    }\n  }, {\n    key: \"_getCheckedCheckBoxColor\",\n    value: function _getCheckedCheckBoxColor() {\n      return this.props.checkedCheckBoxColor ? this.props.checkedCheckBoxColor : this.props.checkBoxColor;\n    }\n  }, {\n    key: \"_getUncheckedCheckBoxColor\",\n    value: function _getUncheckedCheckBoxColor() {\n      return this.props.uncheckedCheckBoxColor ? this.props.uncheckedCheckBoxColor : this.props.checkBoxColor;\n    }\n  }, {\n    key: \"_getTintColor\",\n    value: function _getTintColor() {\n      return this.props.isChecked ? this._getCheckedCheckBoxColor() : this._getUncheckedCheckBoxColor();\n    }\n  }, {\n    key: \"genCheckedImage\",\n    value: function genCheckedImage() {\n      var source;\n      if (this.props.isIndeterminate) {\n        source = require(\"./img/ic_indeterminate_check_box.png\");\n      } else {\n        source = this.props.isChecked ? require(\"./img/ic_check_box.png\") : require(\"./img/ic_check_box_outline_blank.png\");\n      }\n      return _jsx(Image, {\n        source: source,\n        style: {\n          tintColor: this._getTintColor()\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      return _jsx(TouchableHighlight, {\n        style: this.props.style,\n        onPress: function onPress() {\n          return _this.onClick();\n        },\n        underlayColor: \"transparent\",\n        disabled: this.props.disabled,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [this._renderLeft(), this._renderImage(), this._renderRight()]\n        })\n      });\n    }\n  }]);\n  return CheckBox;\n}(Component);\nCheckBox.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  leftText: PropTypes.string,\n  leftTextView: PropTypes.element,\n  rightText: PropTypes.string,\n  leftTextStyle: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  rightTextView: PropTypes.element,\n  rightTextStyle: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  checkedImage: PropTypes.element,\n  unCheckedImage: PropTypes.element,\n  onClick: PropTypes.func.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  isIndeterminate: PropTypes.bool.isRequired,\n  checkBoxColor: PropTypes.string,\n  checkedCheckBoxColor: PropTypes.string,\n  uncheckedCheckBoxColor: PropTypes.string,\n  disabled: PropTypes.bool\n});\nCheckBox.defaultProps = {\n  isChecked: false,\n  isIndeterminate: false,\n  leftTextStyle: {},\n  rightTextStyle: {}\n};\nexport { CheckBox as default };\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  leftText: {\n    flex: 1\n  },\n  rightText: {\n    flex: 1,\n    marginLeft: 10\n  }\n});","map":{"version":3,"names":["React","Component","ViewPropTypes","RNViewPropTypes","PropTypes","View","propTypes","CheckBox","props","onClick","leftTextView","leftText","styles","leftTextStyle","rightTextView","rightText","rightTextStyle","isIndeterminate","indeterminateImage","genCheckedImage","isChecked","checkedImage","unCheckedImage","checkedCheckBoxColor","checkBoxColor","uncheckedCheckBoxColor","_getCheckedCheckBoxColor","_getUncheckedCheckBoxColor","source","require","tintColor","_getTintColor","style","disabled","container","_renderLeft","_renderImage","_renderRight","string","element","oneOfType","number","object","func","isRequired","bool","defaultProps","StyleSheet","create","flexDirection","alignItems","flex","marginLeft"],"sources":["/Users/p.marasca/Desktop/Tu-Store/node_modules/react-native-check-box/index.js"],"sourcesContent":["/**\n * react-native-check-box\n * Checkbox component for react native, it works on iOS and Android\n * https://github.com/crazycodeboy/react-native-check-box\n * Email:crazycodeboy@gmail.com\n * Blog:http://www.devio.org\n * @flow\n */\n\nimport React, {Component} from 'react';\nimport {\n    StyleSheet,\n    View,\n    Image,\n    Text,\n    TouchableHighlight,\n    ViewPropTypes as RNViewPropTypes,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst ViewPropTypes = RNViewPropTypes || View.propTypes;\n\nexport default class CheckBox extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    static propTypes = {\n        ...ViewPropTypes,\n        leftText: PropTypes.string,\n        leftTextView: PropTypes.element,\n        rightText: PropTypes.string,\n        leftTextStyle: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.object,\n        ]),\n        rightTextView: PropTypes.element,\n        rightTextStyle: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.object,\n        ]),\n        checkedImage: PropTypes.element,\n        unCheckedImage: PropTypes.element,\n        onClick: PropTypes.func.isRequired,\n        isChecked: PropTypes.bool.isRequired,\n        isIndeterminate: PropTypes.bool.isRequired,\n        checkBoxColor: PropTypes.string,\n        checkedCheckBoxColor: PropTypes.string,\n        uncheckedCheckBoxColor: PropTypes.string,\n        disabled: PropTypes.bool,\n    }\n    static defaultProps = {\n        isChecked: false,\n        isIndeterminate: false,\n        leftTextStyle: {},\n        rightTextStyle: {}\n    }\n\n    onClick() {\n        this.props.onClick();\n    }\n\n    _renderLeft() {\n        if (this.props.leftTextView) return this.props.leftTextView;\n        if (!this.props.leftText) return null;\n        return (\n            <Text style={[styles.leftText, this.props.leftTextStyle]}>{this.props.leftText}</Text>\n        );\n    }\n\n    _renderRight() {\n        if (this.props.rightTextView) return this.props.rightTextView;\n        if (!this.props.rightText) return null;\n        return (\n            <Text style={[styles.rightText, this.props.rightTextStyle]}>{this.props.rightText}</Text>\n        );\n    }\n\n    _renderImage() {\n        if (this.props.isIndeterminate) {\n            return this.props.indeterminateImage ? this.props.indeterminateImage : this.genCheckedImage();\n        }\n        if (this.props.isChecked) {\n            return this.props.checkedImage ? this.props.checkedImage : this.genCheckedImage();\n        } else {\n            return this.props.unCheckedImage ? this.props.unCheckedImage : this.genCheckedImage();\n        }\n    }\n\n    _getCheckedCheckBoxColor() {\n        return this.props.checkedCheckBoxColor ? this.props.checkedCheckBoxColor : this.props.checkBoxColor\n    }\n\n    _getUncheckedCheckBoxColor() {\n        return this.props.uncheckedCheckBoxColor ? this.props.uncheckedCheckBoxColor : this.props.checkBoxColor\n    }\n\n    _getTintColor() {\n        return this.props.isChecked ? this._getCheckedCheckBoxColor() : this._getUncheckedCheckBoxColor()\n    }\n\n    genCheckedImage() {\n        let source;\n        if (this.props.isIndeterminate) {\n            source = require('./img/ic_indeterminate_check_box.png');\n        }\n        else {\n            source = this.props.isChecked ? require('./img/ic_check_box.png') : require('./img/ic_check_box_outline_blank.png');\n        }\n\n        return (\n            <Image source={source} style={{tintColor: this._getTintColor()}}/>\n        );\n    }\n\n    render() {\n        return (\n            <TouchableHighlight\n                style={this.props.style}\n                onPress={() => this.onClick()}\n                underlayColor='transparent'\n                disabled={this.props.disabled}\n            >\n                <View style={styles.container}>\n                    {this._renderLeft()}\n                    {this._renderImage()}\n                    {this._renderRight()}\n                </View>\n            </TouchableHighlight>\n        );\n    }\n}\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    leftText: {\n        flex: 1,\n    },\n    rightText: {\n        flex: 1,\n        marginLeft: 10\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}