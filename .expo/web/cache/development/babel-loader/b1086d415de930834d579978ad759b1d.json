{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { DATE_SET_ACTION, TIME_SET_ACTION, DISMISS_ACTION, NEUTRAL_BUTTON_ACTION, ANDROID_DISPLAY, ANDROID_MODE, ANDROID_EVT_TYPE, EVENT_TYPE_SET } from \"./constants\";\nimport invariant from 'invariant';\nimport { getOpenPicker, timeZoneOffsetDateSetter, validateAndroidProps } from \"./androidUtils\";\nimport pickers from \"./picker\";\nfunction open(props) {\n  var _props$mode = props.mode,\n    mode = _props$mode === void 0 ? ANDROID_MODE.date : _props$mode,\n    _props$display = props.display,\n    display = _props$display === void 0 ? ANDROID_DISPLAY.default : _props$display,\n    originalValue = props.value,\n    is24Hour = props.is24Hour,\n    minimumDate = props.minimumDate,\n    maximumDate = props.maximumDate,\n    neutralButtonLabel = props.neutralButtonLabel,\n    minuteInterval = props.minuteInterval,\n    timeZoneOffsetInMinutes = props.timeZoneOffsetInMinutes,\n    onChange = props.onChange,\n    onError = props.onError;\n  validateAndroidProps(props);\n  invariant(originalValue, 'A date or time must be specified as `value` prop.');\n  var valueTimestamp = originalValue.getTime();\n  var openPicker = getOpenPicker({\n    mode: mode,\n    value: valueTimestamp,\n    display: display,\n    is24Hour: is24Hour,\n    minimumDate: minimumDate,\n    maximumDate: maximumDate,\n    neutralButtonLabel: neutralButtonLabel,\n    minuteInterval: minuteInterval,\n    timeZoneOffsetInMinutes: timeZoneOffsetInMinutes\n  });\n  var presentPicker = function _callee() {\n    var _await$openPicker, action, day, month, year, minute, hour, date, event;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(openPicker());\n          case 3:\n            _await$openPicker = _context.sent;\n            action = _await$openPicker.action;\n            day = _await$openPicker.day;\n            month = _await$openPicker.month;\n            year = _await$openPicker.year;\n            minute = _await$openPicker.minute;\n            hour = _await$openPicker.hour;\n            date = new Date(valueTimestamp);\n            event = {\n              type: EVENT_TYPE_SET,\n              nativeEvent: {}\n            };\n            _context.t0 = action;\n            _context.next = _context.t0 === DATE_SET_ACTION ? 15 : _context.t0 === TIME_SET_ACTION ? 20 : _context.t0 === NEUTRAL_BUTTON_ACTION ? 25 : _context.t0 === DISMISS_ACTION ? 28 : 28;\n            break;\n          case 15:\n            date.setFullYear(year, month, day);\n            date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n            event.nativeEvent.timestamp = date.getTime();\n            onChange == null ? void 0 : onChange(event, date);\n            return _context.abrupt(\"break\", 31);\n          case 20:\n            date.setHours(hour, minute);\n            date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n            event.nativeEvent.timestamp = date.getTime();\n            onChange == null ? void 0 : onChange(event, date);\n            return _context.abrupt(\"break\", 31);\n          case 25:\n            event.type = ANDROID_EVT_TYPE.neutralButtonPressed;\n            onChange == null ? void 0 : onChange(event, originalValue);\n            return _context.abrupt(\"break\", 31);\n          case 28:\n            event.type = ANDROID_EVT_TYPE.dismissed;\n            onChange == null ? void 0 : onChange(event, originalValue);\n            return _context.abrupt(\"break\", 31);\n          case 31:\n            _context.next = 36;\n            break;\n          case 33:\n            _context.prev = 33;\n            _context.t1 = _context[\"catch\"](0);\n            onError && onError(_context.t1);\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 33]], Promise);\n  };\n  presentPicker();\n}\nfunction dismiss(mode) {\n  pickers[mode].dismiss();\n}\nexport var DateTimePickerAndroid = {\n  open: open,\n  dismiss: dismiss\n};","map":{"version":3,"names":["DATE_SET_ACTION","TIME_SET_ACTION","DISMISS_ACTION","NEUTRAL_BUTTON_ACTION","ANDROID_DISPLAY","ANDROID_MODE","ANDROID_EVT_TYPE","EVENT_TYPE_SET","invariant","getOpenPicker","timeZoneOffsetDateSetter","validateAndroidProps","pickers","open","props","mode","date","display","default","originalValue","value","is24Hour","minimumDate","maximumDate","neutralButtonLabel","minuteInterval","timeZoneOffsetInMinutes","onChange","onError","valueTimestamp","getTime","openPicker","presentPicker","action","day","month","year","minute","hour","Date","event","type","nativeEvent","setFullYear","timestamp","setHours","neutralButtonPressed","dismissed","dismiss","DateTimePickerAndroid"],"sources":["/Users/p.marasca/Desktop/Tu-Store/node_modules/@react-native-community/datetimepicker/src/DateTimePickerAndroid.js"],"sourcesContent":["/**\n * @format\n * @flow strict-local\n */\nimport {\n  DATE_SET_ACTION,\n  TIME_SET_ACTION,\n  DISMISS_ACTION,\n  NEUTRAL_BUTTON_ACTION,\n  ANDROID_DISPLAY,\n  ANDROID_MODE,\n  ANDROID_EVT_TYPE,\n  EVENT_TYPE_SET,\n} from './constants';\nimport invariant from 'invariant';\n\nimport type {DateTimePickerEvent, AndroidNativeProps} from './types';\nimport {\n  getOpenPicker,\n  timeZoneOffsetDateSetter,\n  validateAndroidProps,\n} from './androidUtils';\nimport pickers from './picker';\n\nfunction open(props: AndroidNativeProps) {\n  const {\n    mode = ANDROID_MODE.date,\n    display = ANDROID_DISPLAY.default,\n    value: originalValue,\n    is24Hour,\n    minimumDate,\n    maximumDate,\n    neutralButtonLabel,\n    minuteInterval,\n    timeZoneOffsetInMinutes,\n    onChange,\n    onError,\n  } = props;\n  validateAndroidProps(props);\n  invariant(originalValue, 'A date or time must be specified as `value` prop.');\n\n  const valueTimestamp = originalValue.getTime();\n  const openPicker = getOpenPicker({\n    mode,\n    value: valueTimestamp,\n    display,\n    is24Hour,\n    minimumDate,\n    maximumDate,\n    neutralButtonLabel,\n    minuteInterval,\n    timeZoneOffsetInMinutes,\n  });\n\n  const presentPicker = async () => {\n    try {\n      const {action, day, month, year, minute, hour} = await openPicker();\n      let date = new Date(valueTimestamp);\n      let event: DateTimePickerEvent = {\n        type: EVENT_TYPE_SET,\n        nativeEvent: {},\n      };\n\n      switch (action) {\n        case DATE_SET_ACTION:\n          date.setFullYear(year, month, day);\n          date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n          event.nativeEvent.timestamp = date.getTime();\n          onChange?.(event, date);\n          break;\n\n        case TIME_SET_ACTION:\n          date.setHours(hour, minute);\n          date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n          event.nativeEvent.timestamp = date.getTime();\n          onChange?.(event, date);\n          break;\n\n        case NEUTRAL_BUTTON_ACTION:\n          event.type = ANDROID_EVT_TYPE.neutralButtonPressed;\n          onChange?.(event, originalValue);\n          break;\n\n        case DISMISS_ACTION:\n        default:\n          event.type = ANDROID_EVT_TYPE.dismissed;\n          onChange?.(event, originalValue);\n          break;\n      }\n    } catch (error) {\n      onError && onError(error);\n    }\n  };\n  presentPicker();\n}\n\nfunction dismiss(mode: AndroidNativeProps['mode']) {\n  // $FlowFixMe - `AbstractComponent` [1] is not an instance type.\n  pickers[mode].dismiss();\n}\n\nexport const DateTimePickerAndroid = {open, dismiss};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}