{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Colors } from \"../../themes/colors\";\nimport { Fonts } from \"../../themes/fonts\";\nimport ConstantStyle from \"../../themes/styles\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport StarRating from \"react-native-star-rating\";\nimport MainButton from \"./MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FeedbackModel = function FeedbackModel(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      startCount = _useState2[0],\n      setStarCount = _useState2[1];\n\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: props.modalVisible,\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#000000cd\"\n      },\n      children: _jsxs(View, {\n        style: _objectSpread({\n          width: width - 60,\n          backgroundColor: Colors.white,\n          borderRadius: 10,\n          alignItems: \"center\",\n          paddingBottom: 20\n        }, ConstantStyle.shadow),\n        children: [_jsx(View, {\n          style: _objectSpread({\n            width: 160,\n            height: 160,\n            backgroundColor: Colors.white,\n            borderRadius: 100,\n            alignSelf: \"center\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            top: -80,\n            marginBottom: -80\n          }, ConstantStyle.shadow),\n          children: _jsx(Fontisto, {\n            name: \"like\",\n            size: 85,\n            color: Colors.primary\n          })\n        }), _jsxs(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginHorizontal: 20\n          },\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, Fonts.Black22Bold), {}, {\n              marginVertical: 15\n            }),\n            children: t(\"feedback_text\")\n          }), _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, Fonts.Grey16Medium), {}, {\n              textAlign: \"center\"\n            }),\n            children: t(\"feedback_sub_text\")\n          })]\n        }), _jsx(View, {\n          style: {\n            marginVertical: 10\n          },\n          children: _jsx(StarRating, {\n            disabled: false,\n            emptyStar: \"star-o\",\n            fullStar: \"star\",\n            iconSet: \"FontAwesome\",\n            maxStars: 5,\n            rating: startCount,\n            selectedStar: function selectedStar(rating) {\n              return setStarCount(rating);\n            },\n            fullStarColor: Colors.yellow,\n            emptyStarColor: Colors.grey,\n            starStyle: {\n              marginTop: 15,\n              marginHorizontal: 10\n            },\n            starSize: 45\n          })\n        }), _jsx(View, {\n          style: {\n            width: \"50%\",\n            marginTop: 15\n          },\n          children: _jsx(MainButton, {\n            name: t(\"submit\"),\n            onPress: props.onPress\n          })\n        }), _jsx(TouchableOpacity, {\n          activeOpacity: 0.7,\n          onPress: props.cancleModel,\n          children: _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, Fonts.Primary16Bold), {}, {\n              textAlign: \"center\",\n              marginTop: 10\n            }),\n            children: t(\"not_now\")\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default FeedbackModel;","map":{"version":3,"names":["React","useState","Colors","Fonts","ConstantStyle","Fontisto","StarRating","MainButton","useTranslation","FeedbackModel","props","t","i18n","Dimensions","get","height","width","startCount","setStarCount","modalVisible","flex","justifyContent","alignItems","backgroundColor","white","borderRadius","paddingBottom","shadow","alignSelf","top","marginBottom","primary","marginHorizontal","Black22Bold","marginVertical","Grey16Medium","textAlign","rating","yellow","grey","marginTop","onPress","cancleModel","Primary16Bold"],"sources":["/Users/nicolamelito/Desktop/Tu-Store/src/screens/components/FeedbackModel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Text, View, TouchableOpacity, Dimensions } from \"react-native\";\r\nimport { Colors } from \"../../themes/colors\";\r\nimport { Fonts } from \"../../themes/fonts\";\r\nimport ConstantStyle from \"../../themes/styles\";\r\nimport { Fontisto } from \"@expo/vector-icons\";\r\nimport StarRating from \"react-native-star-rating\";\r\nimport MainButton from \"./MainButton\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst FeedbackModel = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const { height, width } = Dimensions.get(\"window\");\r\n  //star rating\r\n  const [startCount, setStarCount] = useState(2);\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} visible={props.modalVisible}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#000000cd\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            width: width - 60,\r\n            backgroundColor: Colors.white,\r\n            borderRadius: 10,\r\n            alignItems: \"center\",\r\n            paddingBottom: 20,\r\n            ...ConstantStyle.shadow,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              width: 160,\r\n              height: 160,\r\n              backgroundColor: Colors.white,\r\n              borderRadius: 100,\r\n              alignSelf: \"center\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              top: -80,\r\n              marginBottom: -80,\r\n              ...ConstantStyle.shadow,\r\n            }}\r\n          >\r\n            <Fontisto name=\"like\" size={85} color={Colors.primary} />\r\n          </View>\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginHorizontal: 20,\r\n            }}\r\n          >\r\n            <Text style={{ ...Fonts.Black22Bold, marginVertical: 15 }}>\r\n              {t(\"feedback_text\")}\r\n            </Text>\r\n            <Text style={{ ...Fonts.Grey16Medium, textAlign: \"center\" }}>\r\n              {t(\"feedback_sub_text\")}\r\n            </Text>\r\n          </View>\r\n          <View style={{ marginVertical: 10 }}>\r\n            <StarRating\r\n              disabled={false}\r\n              emptyStar=\"star-o\"\r\n              fullStar=\"star\"\r\n              iconSet=\"FontAwesome\"\r\n              maxStars={5}\r\n              rating={startCount}\r\n              selectedStar={(rating) => setStarCount(rating)}\r\n              fullStarColor={Colors.yellow}\r\n              emptyStarColor={Colors.grey}\r\n              starStyle={{ marginTop: 15, marginHorizontal: 10 }}\r\n              starSize={45}\r\n            />\r\n          </View>\r\n          <View style={{ width: \"50%\", marginTop: 15 }}>\r\n            <MainButton name={t(\"submit\")} onPress={props.onPress} />\r\n          </View>\r\n          <TouchableOpacity activeOpacity={0.7} onPress={props.cancleModel}>\r\n            <Text\r\n              style={{\r\n                ...Fonts.Primary16Bold,\r\n                textAlign: \"center\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              {t(\"not_now\")}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\nexport default FeedbackModel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}